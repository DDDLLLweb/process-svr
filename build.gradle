buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')

    }

}

group 'com.process'
version '1.0-SNAPSHOT'

allprojects {

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'findbugs'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'docker'
//    apply plugin: 'war'

    repositories {
        mavenCentral()
    }

    ext {
        springCloudVersion = 'Finchley.SR1'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        options.compilerArgs << '-Xlint:unchecked'
        options.compilerArgs << '-Xlint:deprecation'
    }

    bootRun {
        systemProperties System.properties as Map<String, ?>
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        compile("org.projectlombok:lombok")
        compile("org.springframework.boot:spring-boot-starter")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-data-redis")
        compile("com.alibaba:fastjson:1.2.47")
        compile('org.apache.commons:commons-pool2')
        compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:+')
        runtime('mysql:mysql-connector-java:8.0.13')
        runtime("org.springframework.boot:spring-boot-properties-migrator")
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.14.RELEASE'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(":auth-center") {
    dependencies {
        compile project(":commons")
    }
}
6
project(":zuul-server") {
    dependencies {
        compile project(":commons")
    }
}

project(":backend-server") {
    dependencies {
        compile project(":commons")
    }
}